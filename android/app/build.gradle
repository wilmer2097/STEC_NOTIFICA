plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

// Cargar key.properties para firma release desde la carpeta padre (raíz del proyecto Flutter)
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('../key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
} else {
    throw new GradleException("El archivo key.properties no se encontró en la raíz del proyecto Flutter: ${keystorePropertiesFile.absolutePath}")
}

android {
    namespace = "com.stec.alerta"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = "27.0.12077973"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled = true
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.stec.alerta"
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            ndk {
                debugSymbolLevel 'FULL'
            }
        }
    }

    // Copiar el APK con un nombre personalizado (aunque este script aplica a APK, no AAB)
    afterEvaluate {
        def apkDir = file("$buildDir/outputs/flutter-apk")
        tasks.named("assembleRelease").configure {
            doLast {
                apkDir.listFiles().each { file ->
                    if (file.name == "app-release.apk") {
                        def newName = "STEC-Alerta-v${android.defaultConfig.versionName}.apk"
                        def newFile = new File(apkDir, newName)
                        ant.copy(file: file, tofile: newFile, overwrite: true)
                        println("APK copiado como: $newName")
                    }
                }
            }
        }
    }
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.4'
    implementation(platform("com.google.firebase:firebase-bom:33.10.0"))
    implementation("com.google.firebase:firebase-analytics")
    implementation 'com.google.android.material:material:1.9.0'
}

flutter {
    source = "../.."
}

// Aplica el plugin de Google Services para Firebase
apply plugin: 'com.google.gms.google-services'
